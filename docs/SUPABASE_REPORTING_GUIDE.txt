═══════════════════════════════════════════════════════════════════════════════
  ИНСТРУКЦИЯ: АВТОМАТИЧЕСКИЕ ОТЧЕТЫ ИЗ SUPABASE
═══════════════════════════════════════════════════════════════════════════════

Эта инструкция показывает, как настроить автоматические отчеты из вашей
Supabase базы данных в Slack/Telegram/Email через Make.com или n8n.

═══════════════════════════════════════════════════════════════════════════════
  СПОСОБ 1: ЧЕРЕЗ MAKE.COM (РЕКОМЕНДУЕТСЯ ДЛЯ НАЧИНАЮЩИХ)
═══════════════════════════════════════════════════════════════════════════════

► ШАГ 1: ПОЛУЧЕНИЕ ДАННЫХ ИЗ SUPABASE

1.1. Получите ваш Supabase URL и ANON KEY:
   - Войдите в Supabase Dashboard: https://supabase.com/dashboard
   - Выберите ваш проект
   - Settings → API → Project URL (это ваш SUPABASE_URL)
   - Settings → API → anon/public key (это ваш ANON_KEY)

1.2. Доступные эндпоинты для отчетов:

   ┌─────────────────────────────────────────────────────────────────────┐
   │ ОСНОВНЫЕ МЕТРИКИ (Dashboard Overview)                              │
   ├─────────────────────────────────────────────────────────────────────┤
   │ URL: https://ваш-проект.supabase.co/rest/v1/rpc/get_all_metrics    │
   │ Method: POST                                                        │
   │ Headers:                                                            │
   │   - apikey: ваш-anon-key                                            │
   │   - Authorization: Bearer ваш-anon-key                              │
   │   - Content-Type: application/json                                  │
   │                                                                     │
   │ Body (JSON):                                                        │
   │ {                                                                   │
   │   "p_owner_id": null,          // или "682432124" для фильтра      │
   │   "p_date_from": "2025-01-01", // начальная дата                   │
   │   "p_date_to": "2025-01-31"    // конечная дата                    │
   │ }                                                                   │
   │                                                                     │
   │ Возвращает:                                                         │
   │ - totalSales (общая сумма продаж)                                   │
   │ - totalDeals (количество сделок)                                    │
   │ - conversionRate (процент конверсии)                                │
   │ - avgCallTime (среднее время звонка)                                │
   │ + ещё 17 метрик                                                     │
   └─────────────────────────────────────────────────────────────────────┘

   ┌─────────────────────────────────────────────────────────────────────┐
   │ ВОРОНКА ПРОДАЖ (Sales Funnel)                                      │
   ├─────────────────────────────────────────────────────────────────────┤
   │ URL: https://ваш-проект.supabase.co/rest/v1/rpc/                   │
   │      get_sales_funnel_metrics                                       │
   │ Method: POST                                                        │
   │ Body: такой же как выше                                             │
   │                                                                     │
   │ Возвращает:                                                         │
   │ - contacts: { total, new_leads, no_answer, disqualified }           │
   │ - deals: { total, qualified_to_buy, high_interest, closed_won }     │
   │ - conversion_rates: { contact_to_deal, deal_to_won }                │
   └─────────────────────────────────────────────────────────────────────┘

   ┌─────────────────────────────────────────────────────────────────────┐
   │ СДЕЛКИ ПО СТАДИЯМ (Deals Breakdown)                                │
   ├─────────────────────────────────────────────────────────────────────┤
   │ URL: https://ваш-проект.supabase.co/rest/v1/rpc/                   │
   │      get_deals_breakdown                                            │
   │ Method: POST                                                        │
   │ Body: такой же как выше                                             │
   │                                                                     │
   │ Возвращает массив стадий:                                           │
   │ [                                                                   │
   │   {                                                                 │
   │     "stage_name": "Qualified to buy",                               │
   │     "deal_count": 150,                                              │
   │     "total_amount": 450000,                                         │
   │     "avg_amount": 3000                                              │
   │   },                                                                │
   │   ...                                                               │
   │ ]                                                                   │
   └─────────────────────────────────────────────────────────────────────┘


► ШАГ 2: НАСТРОЙКА В MAKE.COM

2.1. Создайте новый сценарий:
   - Зайдите на https://make.com
   - Нажмите "Create a new scenario"

2.2. Добавьте триггер (Schedule):
   - Добавьте модуль "Schedule" → "Every day"
   - Установите время: например, 09:00 каждый день

2.3. Добавьте HTTP Request модуль:
   - Добавьте модуль "HTTP" → "Make a request"
   - URL: https://ваш-проект.supabase.co/rest/v1/rpc/get_all_metrics
   - Method: POST
   - Headers:
     * apikey: ваш-anon-key
     * Authorization: Bearer ваш-anon-key
     * Content-Type: application/json
   - Body:
     {
       "p_owner_id": null,
       "p_date_from": "{{formatDate(addDays(now; -30); "YYYY-MM-DD")}}",
       "p_date_to": "{{formatDate(now; "YYYY-MM-DD")}}"
     }

2.4. Форматируйте сообщение (Text Parser):
   - Добавьте модуль "Tools" → "Set variable"
   - Создайте переменную "message" с текстом:

   📊 ЕЖЕДНЕВНЫЙ ОТЧЕТ ПО ПРОДАЖАМ

   💰 Продажи за 30 дней:
   • Общая сумма: ${{formatNumber(totalSales; 0; "."; ",")}}
   • Количество сделок: {{totalDeals}}
   • Средний чек: ${{formatNumber(avgDealSize; 0; "."; ",")}}

   📈 Конверсия:
   • Контакты → Клиенты: {{formatNumber(conversionRate; 1)}}%
   • Квалифицированных: {{formatNumber(qualifiedRate; 1)}}%

   📞 Звонки:
   • Всего: {{totalCalls}}
   • Среднее время: {{formatNumber(avgCallTime; 1)}} мин
   • 5+ минут: {{formatNumber(fiveMinReachedRate; 1)}}%

   ────────────────────────────

2.5. Отправьте в Slack:
   - Добавьте модуль "Slack" → "Create a Message"
   - Подключите ваш Slack workspace
   - Channel: выберите канал (например, #sales-reports)
   - Text: {{message}}

   ИЛИ отправьте в Telegram:
   - Добавьте модуль "Telegram Bot" → "Send a Text Message"
   - Chat ID: получите через @userinfobot
   - Text: {{message}}

   ИЛИ отправьте Email:
   - Добавьте модуль "Email" → "Send an Email"
   - To: ваш-email@example.com
   - Subject: Ежедневный отчет по продажам
   - Content: {{message}}


► ШАГ 3: ПРИМЕРЫ ПОЛЕЗНЫХ ОТЧЕТОВ

┌─────────────────────────────────────────────────────────────────────┐
│ ОТЧЕТ 1: ЕЖЕДНЕВНАЯ СВОДКА (каждое утро в 9:00)                    │
├─────────────────────────────────────────────────────────────────────┤
│ Триггер: Schedule → Every day at 09:00                              │
│ Данные: get_all_metrics за последние 7 дней                         │
│ Отправить: Slack #sales-team                                        │
│                                                                     │
│ Показывает:                                                         │
│ - Продажи за неделю                                                 │
│ - Конверсия                                                         │
│ - Количество звонков                                                │
└─────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────┐
│ ОТЧЕТ 2: ЕЖЕНЕДЕЛЬНАЯ ВОРОНКА (каждый понедельник)                 │
├─────────────────────────────────────────────────────────────────────┤
│ Триггер: Schedule → Every Monday at 10:00                           │
│ Данные: get_sales_funnel_metrics за последние 7 дней                │
│ Отправить: Email CEO + Telegram менеджерам                          │
│                                                                     │
│ Показывает:                                                         │
│ - Сколько лидов на каждой стадии                                    │
│ - Процент конверсии между стадиями                                  │
│ - Где теряется больше всего клиентов                                │
└─────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────┐
│ ОТЧЕТ 3: МЕСЯЧНЫЙ ОТЧЕТ (1 число каждого месяца)                   │
├─────────────────────────────────────────────────────────────────────┤
│ Триггер: Schedule → Monthly on day 1 at 09:00                       │
│ Данные: get_all_metrics за прошлый месяц                            │
│ Отправить: Email с PDF файлом                                       │
│                                                                     │
│ Показывает:                                                         │
│ - Все 21 метрику                                                    │
│ - Сравнение с предыдущим месяцем (если добавить второй запрос)     │
│ - График продаж по дням                                             │
└─────────────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════════
  СПОСОБ 2: ЧЕРЕЗ N8N (ДЛЯ ПРОДВИНУТЫХ + SELF-HOSTED)
═══════════════════════════════════════════════════════════════════════════════

► ПРЕИМУЩЕСТВА N8N:
  ✅ Бесплатный (self-hosted)
  ✅ Неограниченное количество операций
  ✅ Полный контроль над данными
  ✅ Можно кастомизировать под любые нужды

► УСТАНОВКА N8N:

# Docker (рекомендуется):
docker run -it --rm \
  --name n8n \
  -p 5678:5678 \
  -v ~/.n8n:/home/node/.n8n \
  n8nio/n8n

# Откройте: http://localhost:5678


► НАСТРОЙКА WORKFLOW В N8N:

1. Schedule Trigger
   - Node: "Schedule Trigger"
   - Cron: "0 9 * * *" (каждый день в 9:00)

2. HTTP Request
   - Node: "HTTP Request"
   - Method: POST
   - URL: https://ваш-проект.supabase.co/rest/v1/rpc/get_all_metrics
   - Headers:
     * apikey: ваш-anon-key
     * Authorization: Bearer ваш-anon-key
     * Content-Type: application/json
   - Body (JSON):
     {
       "p_owner_id": null,
       "p_date_from": "{{ $now.minus({ days: 30 }).toFormat('yyyy-MM-dd') }}",
       "p_date_to": "{{ $now.toFormat('yyyy-MM-dd') }}"
     }

3. Function (для форматирования)
   - Node: "Function"
   - JavaScript Code:

   const data = items[0].json;

   const message = `
   📊 ОТЧЕТ ПО ПРОДАЖАМ

   💰 За последние 30 дней:
   • Продажи: $${data.totalSales.toLocaleString()}
   • Сделок: ${data.totalDeals}
   • Средний чек: $${data.avgDealSize.toLocaleString()}

   📈 Конверсия: ${data.conversionRate.toFixed(1)}%
   📞 Звонков: ${data.totalCalls}
   ⏱️ Среднее время: ${data.avgCallTime.toFixed(1)} мин
   `;

   return [{ json: { message } }];

4. Slack / Telegram / Email
   - Node: выберите "Slack", "Telegram" или "Send Email"
   - Настройте как в Make.com


═══════════════════════════════════════════════════════════════════════════════
  СПОСОБ 3: ПРЯМОЙ ДОСТУП К ДАННЫМ (ДЛЯ РАЗРАБОТЧИКОВ)
═══════════════════════════════════════════════════════════════════════════════

Если у вас есть технические навыки, можете напрямую запрашивать данные:

► ПРИМЕР: CURL

curl -X POST 'https://ваш-проект.supabase.co/rest/v1/rpc/get_all_metrics' \
  -H "apikey: ваш-anon-key" \
  -H "Authorization: Bearer ваш-anon-key" \
  -H "Content-Type: application/json" \
  -d '{
    "p_owner_id": null,
    "p_date_from": "2025-01-01",
    "p_date_to": "2025-01-31"
  }'


► ПРИМЕР: PYTHON

import requests
from datetime import datetime, timedelta

SUPABASE_URL = "https://ваш-проект.supabase.co"
ANON_KEY = "ваш-anon-key"

def get_metrics(days_back=30):
    url = f"{SUPABASE_URL}/rest/v1/rpc/get_all_metrics"

    headers = {
        "apikey": ANON_KEY,
        "Authorization": f"Bearer {ANON_KEY}",
        "Content-Type": "application/json"
    }

    date_to = datetime.now().strftime("%Y-%m-%d")
    date_from = (datetime.now() - timedelta(days=days_back)).strftime("%Y-%m-%d")

    body = {
        "p_owner_id": None,
        "p_date_from": date_from,
        "p_date_to": date_to
    }

    response = requests.post(url, headers=headers, json=body)
    return response.json()

# Использование:
metrics = get_metrics(30)
print(f"Продажи: ${metrics['totalSales']}")
print(f"Сделок: {metrics['totalDeals']}")


► ПРИМЕР: NODE.JS / JAVASCRIPT

const fetch = require('node-fetch');

const SUPABASE_URL = 'https://ваш-проект.supabase.co';
const ANON_KEY = 'ваш-anon-key';

async function getMetrics(daysBack = 30) {
  const dateTo = new Date().toISOString().split('T')[0];
  const dateFrom = new Date(Date.now() - daysBack * 24 * 60 * 60 * 1000)
    .toISOString().split('T')[0];

  const response = await fetch(
    `${SUPABASE_URL}/rest/v1/rpc/get_all_metrics`,
    {
      method: 'POST',
      headers: {
        'apikey': ANON_KEY,
        'Authorization': `Bearer ${ANON_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        p_owner_id: null,
        p_date_from: dateFrom,
        p_date_to: dateTo
      })
    }
  );

  return await response.json();
}

// Использование:
getMetrics(30).then(metrics => {
  console.log(`Продажи: $${metrics.totalSales}`);
  console.log(`Сделок: ${metrics.totalDeals}`);
});


═══════════════════════════════════════════════════════════════════════════════
  БЕЗОПАСНОСТЬ
═══════════════════════════════════════════════════════════════════════════════

⚠️ ВАЖНО:

1. НЕ ПУБЛИКУЙТЕ ANON_KEY в публичных репозиториях
   - Используйте переменные окружения
   - В Make.com/n8n храните ключи в Credentials

2. ANON_KEY имеет только READ доступ
   - Данные защищены Row Level Security (RLS)
   - Нельзя изменить или удалить данные через API
   - Безопасно использовать в автоматизациях

3. Для чувствительных данных используйте SERVICE_KEY
   - Но НИКОГДА не используйте его в публичных сценариях
   - Только на backend или в защищённых системах


═══════════════════════════════════════════════════════════════════════════════
  ЧАСТО ЗАДАВАЕМЫЕ ВОПРОСЫ
═══════════════════════════════════════════════════════════════════════════════

Q: Как получить данные только по одному менеджеру?
A: Используйте параметр "p_owner_id": "682432124" вместо null

Q: Как сделать сравнение с прошлым месяцем?
A: Сделайте 2 HTTP запроса с разными датами, потом сравните результаты

Q: Можно ли экспортировать в Excel/Google Sheets?
A: Да! В Make.com/n8n есть модули для Google Sheets и Excel

Q: Как часто можно запрашивать данные?
A: Supabase Free tier: 50,000 запросов в месяц (достаточно для ежечасных)

Q: Данные обновляются в реальном времени?
A: Да, как только синхронизация HubSpot → Supabase завершена


═══════════════════════════════════════════════════════════════════════════════
  ПОДДЕРЖКА
═══════════════════════════════════════════════════════════════════════════════

Если возникли вопросы:
1. Проверьте, что ANON_KEY правильный
2. Убедитесь, что в Supabase есть данные (откройте Table Editor)
3. Проверьте формат дат (должен быть YYYY-MM-DD)
4. Проверьте логи в Make.com/n8n

Дополнительная документация:
- Supabase API: https://supabase.com/docs/guides/api
- Make.com: https://www.make.com/en/help/tutorials
- n8n: https://docs.n8n.io/

═══════════════════════════════════════════════════════════════════════════════
