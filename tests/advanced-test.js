import { getAllCRMData } from './hubspot-api.js';

(async () => {
    console.log('üöÄ –†–ê–°–®–ò–†–ï–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï HUBSPOT API üöÄ\n');

    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ CRM –æ–¥–Ω–∏–º –≤—ã–∑–æ–≤–æ–º
        const crmData = await getAllCRMData();

        // –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        console.log('\nüìä –°–í–û–î–ö–ê –î–ê–ù–ù–´–•:');

        if (crmData.contactProperties) {
            console.log(`üìã –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ${crmData.contactProperties.length}`);
            console.log('   –ü—Ä–∏–º–µ—Ä—ã —Å–≤–æ–π—Å—Ç–≤:');
            crmData.contactProperties.slice(0, 5).forEach(prop => {
                console.log(`   - ${prop.name}: ${prop.label} (${prop.type})`);
            });
        }

        if (crmData.dealProperties) {
            console.log(`\nüíº –°–≤–æ–π—Å—Ç–≤–∞ —Å–¥–µ–ª–æ–∫: ${crmData.dealProperties.length}`);
            console.log('   –ü—Ä–∏–º–µ—Ä—ã —Å–≤–æ–π—Å—Ç–≤:');
            crmData.dealProperties.slice(0, 5).forEach(prop => {
                console.log(`   - ${prop.name}: ${prop.label} (${prop.type})`);
            });
        }

        if (crmData.contacts) {
            console.log(`\nüë• –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${crmData.contacts.length}`);
            console.log('   –ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:');
            crmData.contacts.slice(0, 3).forEach(contact => {
                const email = contact.properties.email || '–ù–µ —É–∫–∞–∑–∞–Ω';
                const firstName = contact.properties.firstname || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
                const lastName = contact.properties.lastname || '';
                console.log(`   - ${firstName} ${lastName} (${email})`);
            });
        }

        if (crmData.deals) {
            console.log(`\nüí∞ –°–¥–µ–ª–∫–∏: ${crmData.deals.length}`);
            console.log('   –ü—Ä–∏–º–µ—Ä—ã —Å–¥–µ–ª–æ–∫:');
            crmData.deals.slice(0, 3).forEach(deal => {
                const name = deal.properties.dealname || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
                const amount = deal.properties.amount || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
                const stage = deal.properties.dealstage || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
                console.log(`   - ${name} (${amount}‚ÇΩ, —Å—Ç–∞–¥–∏—è: ${stage})`);
            });
        }

        if (crmData.errors.length > 0) {
            console.log('\n‚ö†Ô∏è  –û–®–ò–ë–ö–ò:');
            crmData.errors.forEach(error => {
                console.log(`   ‚ùå ${error}`);
            });
        }

        console.log('\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        const fs = await import('fs');
        fs.writeFileSync('crm-data-sample.json', JSON.stringify({
            summary: {
                contactPropertiesCount: crmData.contactProperties?.length || 0,
                dealPropertiesCount: crmData.dealProperties?.length || 0,
                contactsCount: crmData.contacts?.length || 0,
                dealsCount: crmData.deals?.length || 0,
                errorsCount: crmData.errors.length
            },
            errors: crmData.errors,
            sampleData: {
                contactProperties: crmData.contactProperties?.slice(0, 10),
                dealProperties: crmData.dealProperties?.slice(0, 10),
                contacts: crmData.contacts?.slice(0, 5),
                deals: crmData.deals?.slice(0, 5)
            }
        }, null, 2));

        console.log('\nüíæ –û–±—Ä–∞–∑–µ—Ü –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ crm-data-sample.json');

    } catch (error) {
        console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
        console.log('\nüìã –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:');
        console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–∞ –≤ .env —Ñ–∞–π–ª–µ');
        console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞');
        console.log('3. –°–º. –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ HUBSPOT_SETUP.md');
    }
})();