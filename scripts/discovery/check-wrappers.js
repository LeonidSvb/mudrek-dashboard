import 'dotenv/config';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function checkWrappers() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Supabase Wrappers...\n');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ï—Å—Ç—å –ª–∏ extension wrappers?
  const { data: extensions, error: extError } = await supabase
    .from('pg_available_extensions')
    .select('*')
    .eq('name', 'wrappers');

  if (extError) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å extensions:', extError.message);
  } else {
    console.log('üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ wrappers extensions:', extensions);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ï—Å—Ç—å –ª–∏ —É–∂–µ foreign servers?
  const { data: servers, error: serverError } = await supabase.rpc('execute_sql', {
    sql: `
      SELECT
        srvname as server_name,
        fdw.fdwname as fdw_name,
        srvoptions as options
      FROM pg_foreign_server srv
      JOIN pg_foreign_data_wrapper fdw ON srv.srvfdw = fdw.oid
      WHERE srvname LIKE '%hubspot%' OR fdwname LIKE '%wasm%';
    `
  });

  if (serverError) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å foreign servers:', serverError.message);
    console.log('   (–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞)\n');
  } else {
    console.log('üåê HubSpot foreign servers:', servers);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ï—Å—Ç—å –ª–∏ foreign tables?
  const { data: tables, error: tablesError } = await supabase.rpc('execute_sql', {
    sql: `
      SELECT
        schemaname,
        tablename,
        foreign_table_catalog,
        foreign_table_schema
      FROM pg_foreign_tables
      WHERE schemaname = 'hubspot' OR tablename LIKE '%hubspot%';
    `
  });

  if (tablesError) {
    console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å foreign tables:', tablesError.message);
  } else {
    console.log('üìä HubSpot foreign tables:', tables);
  }

  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

checkWrappers().catch(console.error);
