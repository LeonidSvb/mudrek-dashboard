import 'dotenv/config';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function checkRawJsonOwner() {
  console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ raw_json –Ω–∞ –Ω–∞–ª–∏—á–∏–µ hubspot_owner_id...\n');

  // Contacts
  console.log('=== CONTACTS ===\n');
  const { data: contacts } = await supabase
    .from('hubspot_contacts_raw')
    .select('hubspot_id, email, raw_json')
    .limit(5);

  contacts?.forEach((c, i) => {
    console.log(`Contact ${i + 1}: ${c.email}`);

    if (c.raw_json) {
      const ownerId = c.raw_json.hubspot_owner_id || c.raw_json.properties?.hubspot_owner_id;
      console.log(`  raw_json keys: ${Object.keys(c.raw_json).slice(0, 10).join(', ')}`);
      console.log(`  hubspot_owner_id: ${ownerId || '–ù–ï–¢'}`);
    } else {
      console.log(`  raw_json: –ø—É—Å—Ç–æ–π`);
    }
    console.log('');
  });

  // Deals
  console.log('\n=== DEALS ===\n');
  const { data: deals } = await supabase
    .from('hubspot_deals_raw')
    .select('hubspot_id, amount, raw_json')
    .limit(5);

  deals?.forEach((d, i) => {
    console.log(`Deal ${i + 1}: ‚Ç™${d.amount}`);

    if (d.raw_json) {
      const ownerId = d.raw_json.hubspot_owner_id || d.raw_json.properties?.hubspot_owner_id;
      console.log(`  raw_json keys: ${Object.keys(d.raw_json).slice(0, 10).join(', ')}`);
      console.log(`  hubspot_owner_id: ${ownerId || '–ù–ï–¢'}`);
    } else {
      console.log(`  raw_json: –ø—É—Å—Ç–æ–π`);
    }
    console.log('');
  });

  // –í—ã–≤–æ–¥
  console.log('\n=== –†–ï–®–ï–ù–ò–ï ===\n');

  const { data: contactsWithOwner } = await supabase
    .from('hubspot_contacts_raw')
    .select('raw_json')
    .not('raw_json', 'is', null);

  const contactsCount = contactsWithOwner?.filter(c =>
    c.raw_json?.hubspot_owner_id || c.raw_json?.properties?.hubspot_owner_id
  ).length || 0;

  console.log(`Contacts —Å owner_id –≤ raw_json: ${contactsCount} –∏–∑ ${contactsWithOwner?.length || 0}`);

  if (contactsCount > 0) {
    console.log('\n‚úÖ –û–¢–õ–ò–ß–ù–û! hubspot_owner_id –µ—Å—Ç—å –≤ raw_json!');
    console.log('\nüöÄ –ë–´–°–¢–†–û–ï –†–ï–®–ï–ù–ò–ï (–ë–ï–ó —Ä–µ-—Å–∏–Ω–∫–∞):');
    console.log('\n1. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É:');
    console.log(`   ALTER TABLE hubspot_contacts_raw ADD COLUMN hubspot_owner_id TEXT;`);
    console.log(`   ALTER TABLE hubspot_deals_raw ADD COLUMN hubspot_owner_id TEXT;`);
    console.log('\n2. –ò–∑–≤–ª–µ—á—å –∏–∑ JSONB –æ–¥–Ω–∏–º SQL UPDATE:');
    console.log(`   UPDATE hubspot_contacts_raw`);
    console.log(`   SET hubspot_owner_id = raw_json->>'hubspot_owner_id';`);
    console.log('\n   –∏–ª–∏ –µ—Å–ª–∏ –≤ properties:');
    console.log(`   UPDATE hubspot_contacts_raw`);
    console.log(`   SET hubspot_owner_id = raw_json->'properties'->>'hubspot_owner_id';`);
    console.log('\n3. –°–æ–∑–¥–∞—Ç—å indexes:');
    console.log(`   CREATE INDEX idx_contacts_owner ON hubspot_contacts_raw(hubspot_owner_id);`);
    console.log('\n‚è±Ô∏è  –í—Ä–µ–º—è: ~30 —Å–µ–∫—É–Ω–¥ –≤–º–µ—Å—Ç–æ 10 –º–∏–Ω—É—Ç —Ä–µ-—Å–∏–Ω–∫–∞!');
  } else {
    console.log('\n‚ùå raw_json –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ—Ç owner_id');
    console.log('–ù—É–∂–µ–Ω full re-sync —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º');
  }
}

checkRawJsonOwner().catch(console.error);
