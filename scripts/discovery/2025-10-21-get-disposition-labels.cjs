require('dotenv').config();

async function getDispositionLabels() {
  const apiKey = process.env.HUBSPOT_API_KEY;

  console.log('üîç –ü–æ–ª—É—á–∞–µ–º human-readable –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è disposition UUID\n');

  try {
    // –ü–æ–ø—ã—Ç–∫–∞ 1: –ß–µ—Ä–µ–∑ properties API v1
    console.log('üì° –ü–æ–ø—ã—Ç–∫–∞ 1: GET /properties/v1/calls/properties/named/hs_call_disposition\n');

    const url1 = 'https://api.hubapi.com/properties/v1/calls/properties/named/hs_call_disposition';
    const response1 = await fetch(url1, {
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json'
      }
    });

    if (response1.ok) {
      const data1 = await response1.json();
      console.log('‚úÖ –£—Å–ø–µ—Ö! –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:\n');

      if (data1.options && data1.options.length > 0) {
        console.log('üìã –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ Call Outcomes:');
        console.table(data1.options.map(opt => ({
          UUID: opt.value,
          Label: opt.label,
          Description: opt.description || 'N/A',
          Hidden: opt.hidden || false,
          DisplayOrder: opt.displayOrder
        })));

        // –°–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å –Ω–∞—à–∏–º–∏ UUID
        console.log('\nüéØ –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å UUID –∏–∑ –ë–î:\n');
        const ourUUIDs = {
          'f240bbac-87c9-4f6e-bf70-924b57d47db7': { count: 214, avg: '246.7s' },
          '73a0d17f-1163-4015-bdd5-ec830791da20': { count: 264, avg: '38.9s' },
          'b2cf5968-551e-4856-9783-52b3da59a7d0': { count: 22, avg: '36.9s' }
        };

        Object.entries(ourUUIDs).forEach(([uuid, stats]) => {
          const match = data1.options.find(opt => opt.value === uuid);
          if (match) {
            console.log(`${uuid}`);
            console.log(`  ‚Üí "${match.label}"`);
            console.log(`  ‚Üí –í –ë–î: ${stats.count} –∑–≤–æ–Ω–∫–æ–≤, avg ${stats.avg}`);
            console.log('');
          }
        });
      } else {
        console.log('‚ö†Ô∏è  Options –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ v1 API');
      }
    } else {
      console.log(`‚ùå v1 API failed: ${response1.status}`);
    }

    // –ü–æ–ø—ã—Ç–∫–∞ 2: –ß–µ—Ä–µ–∑ properties API v3
    console.log('\nüì° –ü–æ–ø—ã—Ç–∫–∞ 2: GET /crm/v3/properties/calls/hs_call_disposition\n');

    const url2 = 'https://api.hubapi.com/crm/v3/properties/calls/hs_call_disposition';
    const response2 = await fetch(url2, {
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Content-Type': 'application/json'
      }
    });

    if (response2.ok) {
      const data2 = await response2.json();
      console.log('‚úÖ v3 API –¥–∞–Ω–Ω—ã–µ:');
      console.log(JSON.stringify(data2, null, 2));
    } else {
      console.log(`‚ùå v3 API failed: ${response2.status}`);
    }

    // –ü–æ–ø—ã—Ç–∫–∞ 3: –ß–µ—Ä–µ–∑ search –≤ Supabase - –Ω–∞–π—Ç–∏ —Ä–µ–∞–ª—å–Ω—ã–µ labels
    console.log('\nüì° –ü–æ–ø—ã—Ç–∫–∞ 3: –ê–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ –ª–æ–≥–∏–∫—É –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n');

    console.log('–ü–æ –∞–Ω–∞–ª–∏–∑—É 500 –∑–≤–æ–Ω–∫–æ–≤ –∏–∑ –ë–î:');
    console.log('');
    console.log('UUID: f240bbac-87c9-4f6e-bf70-924b57d47db7');
    console.log('  ‚Üí 214 –∑–≤–æ–Ω–∫–æ–≤, avg 246.7s (4+ –º–∏–Ω—É—Ç—ã)');
    console.log('  ‚Üí –ì–∏–ø–æ—Ç–µ–∑–∞: "Connected" –∏–ª–∏ "Answered" ‚úÖ');
    console.log('');
    console.log('UUID: 73a0d17f-1163-4015-bdd5-ec830791da20');
    console.log('  ‚Üí 264 –∑–≤–æ–Ω–∫–∞, avg 38.9s (~39 —Å–µ–∫—É–Ω–¥)');
    console.log('  ‚Üí –ì–∏–ø–æ—Ç–µ–∑–∞: "No Answer" –∏–ª–∏ "Busy" ‚ùå');
    console.log('');
    console.log('UUID: b2cf5968-551e-4856-9783-52b3da59a7d0');
    console.log('  ‚Üí 22 –∑–≤–æ–Ω–∫–∞, avg 36.9s (~37 —Å–µ–∫—É–Ω–¥)');
    console.log('  ‚Üí –ì–∏–ø–æ—Ç–µ–∑–∞: "Left Voicemail" –∏–ª–∏ "Failed" ‚ùå');
    console.log('');

    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:');
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å UUID f240bbac –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è "connected" –∑–≤–æ–Ω–∫–æ–≤');
    console.log('–≠—Ç–æ —Å–∞–º—ã–π —Ç–æ—á–Ω—ã–π —Å–ø–æ—Å–æ–±, —Ç.–∫.:');
    console.log('  1. Avg duration 4+ –º–∏–Ω—É—Ç—ã = —è–≤–Ω–æ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä');
    console.log('  2. –ù–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ threshold (30s, 60s –∏ —Ç.–¥.)');
    console.log('  3. –ú–µ–Ω–µ–¥–∂–µ—Ä—ã/—Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã—Å—Ç–∞–≤–ª—è—é—Ç outcome');
    console.log('');
    console.log('SQL –¥–ª—è Pickup Rate:');
    console.log("  pickup_rate = COUNT(*) FILTER (WHERE call_disposition = 'f240bbac-87c9-4f6e-bf70-924b57d47db7')");
    console.log("                / COUNT(*) * 100");
    console.log('');
    console.log('–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ~42.8% (214/500)');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

getDispositionLabels();
