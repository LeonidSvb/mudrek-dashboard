require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const { parse } = require('csv-parse/sync');

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

const HUBSPOT_API_KEY = process.env.HUBSPOT_API_KEY;

function normalizePhone(phone) {
  if (!phone) return null;
  return phone.replace(/\D/g, '').slice(-10);
}

async function getProblemDealsWithLinks() {
  console.log('=== –ü–†–ò–ú–ï–†–´ DEALS –° –ü–†–û–ë–õ–ï–ú–ê–ú–ò ===\n');

  // 1. –ü–æ–ª—É—á–∏—Ç—å portal_id –∏–∑ HubSpot API
  console.log('1. –ü–æ–ª—É—á–∞—é portal_id –∏–∑ HubSpot...\n');

  const accountResponse = await fetch('https://api.hubapi.com/account-info/v3/details', {
    headers: {
      'Authorization': `Bearer ${HUBSPOT_API_KEY}`,
      'Content-Type': 'application/json'
    }
  });

  let portalId = 'UNKNOWN';
  if (accountResponse.ok) {
    const accountData = await accountResponse.json();
    portalId = accountData.portalId;
    console.log(`‚úì Portal ID: ${portalId}\n`);
  } else {
    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å portal_id, –∏—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ URL\n');
  }

  // 2. –ó–∞–≥—Ä—É–∑–∏—Ç—å CSV
  const csvPath = 'C:\\Users\\79818\\Downloads\\Mudrek - Sales Summary - Customers (4).csv';
  const fileContent = fs.readFileSync(csvPath, 'utf-8');
  const csvRecords = parse(fileContent, {
    columns: true,
    skip_empty_lines: true,
    relax_column_count: true
  });

  // 3. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ deals –∏–∑ DB
  const { data: allDBDeals } = await supabase
    .from('hubspot_deals_raw')
    .select('hubspot_id, dealname, amount, dealstage, raw_json');

  // 4. –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å –ø–æ phone
  const dbByPhone = {};
  allDBDeals.forEach(d => {
    const phone = d.raw_json?.properties?.phone_number;
    if (phone) {
      const normalized = normalizePhone(phone);
      if (normalized) {
        dbByPhone[normalized] = d;
      }
    }
  });

  // 5. –ù–∞–π—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø—Ä–æ–±–ª–µ–º
  const examples = {
    wrongAmount: [],
    wrongAmountStopped: [],
    wrongAmountPaused: []
  };

  csvRecords.forEach(csvDeal => {
    const phone = normalizePhone(csvDeal.phone);
    if (!phone) return;

    const dbDeal = dbByPhone[phone];
    if (!dbDeal) return;

    const props = dbDeal.raw_json?.properties || {};
    const dbAmount = parseFloat(props.amount) || 0;
    const dealWholeAmount = parseFloat(props.deal_whole_amount) || 0;
    const installments = parseFloat(props.installments) || 0;
    const csvStatus = (csvDeal.Status || '').toLowerCase().trim();

    // –ü—Ä–æ–±–ª–µ–º–∞: amount ‚â† deal_whole_amount
    if (Math.abs(dbAmount - dealWholeAmount) > 10) {
      const example = {
        hubspot_id: dbDeal.hubspot_id,
        dealname: dbDeal.dealname,
        phone: phone,
        csvStatus: csvStatus,
        currentAmount: dbAmount,
        correctAmount: dealWholeAmount,
        installments: installments,
        csvDealAmount: parseFloat(csvDeal['deal amount']?.replace(/[^0-9.]/g, '')) || 0,
        csvPayment: parseFloat(csvDeal.payment?.replace(/[^0-9.]/g, '')) || 0,
        csvInstallments: parseFloat(csvDeal.installments?.replace(/[^0-9.]/g, '')) || 0
      };

      if (csvStatus === 'finished' && examples.wrongAmount.length < 3) {
        examples.wrongAmount.push(example);
      } else if (csvStatus === 'stopped' && examples.wrongAmountStopped.length < 3) {
        examples.wrongAmountStopped.push(example);
      } else if (csvStatus === 'paused' && examples.wrongAmountPaused.length < 3) {
        examples.wrongAmountPaused.push(example);
      }
    }
  });

  // 6. –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã
  console.log('=== FINISHED DEALS (–∑–∞–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é, –Ω–æ —Å—É–º–º–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è) ===\n');

  examples.wrongAmount.forEach((ex, i) => {
    console.log(`${i + 1}. ${ex.dealname}`);
    console.log(`   HubSpot Link: https://app.hubspot.com/contacts/${portalId}/deal/${ex.hubspot_id}`);
    console.log('');
    console.log('   ‚ùå –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï (–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û):');
    console.log(`      amount: $${ex.currentAmount}`);
    console.log(`      installments: ${ex.installments}`);
    console.log(`      payment_status: (–ø—É—Å—Ç–æ)`);
    console.log('');
    console.log('   ‚úÖ –ß–¢–û –ù–£–ñ–ù–û (–ü–†–ê–í–ò–õ–¨–ù–û):');
    console.log(`      amount: $${ex.correctAmount} (–∏–∑ deal_whole_amount)`);
    console.log(`      installments: ${ex.installments} (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)`);
    console.log(`      payment_status: "finished"`);
    console.log('');
    console.log('   üìä –ê–ù–ê–õ–ò–ó:');
    console.log(`      CSV deal amount: $${ex.csvDealAmount}`);
    console.log(`      CSV payment: $${ex.csvPayment} √ó ${ex.csvInstallments}`);
    console.log(`      –†–∞—Å—á–µ—Ç: ${ex.csvPayment} √ó ${ex.csvInstallments} = $${ex.csvPayment * ex.csvInstallments}`);
    console.log(`      –¢–µ–∫—É—â–∏–π DB amount = payment_size (${ex.currentAmount})`);
    console.log(`      –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π amount = deal_whole_amount (${ex.correctAmount})`);
    console.log('');
    console.log('   üîß –ß–¢–û –ú–´ –û–ë–ù–û–í–ò–ú:');
    console.log(`      1. amount: ${ex.currentAmount} ‚Üí ${ex.correctAmount}`);
    console.log(`      2. payment_status: (–ø—É—Å—Ç–æ) ‚Üí "finished"`);
    console.log('');
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
  });

  console.log('=== STOPPED DEALS (–ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —Å—É–º–º–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è) ===\n');

  examples.wrongAmountStopped.forEach((ex, i) => {
    console.log(`${i + 1}. ${ex.dealname}`);
    console.log(`   HubSpot Link: https://app.hubspot.com/contacts/${portalId}/deal/${ex.hubspot_id}`);
    console.log('');
    console.log('   ‚ùå –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
    console.log(`      amount: $${ex.currentAmount}`);
    console.log(`      dealstage: closedwon (–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - –æ–Ω–∏ stopped!)`);
    console.log(`      payment_status: (–ø—É—Å—Ç–æ)`);
    console.log('');
    console.log('   ‚úÖ –ß–¢–û –ù–£–ñ–ù–û:');
    console.log(`      amount: $${ex.correctAmount}`);
    console.log(`      dealstage: closedwon (–æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å)`);
    console.log(`      payment_status: "stopped" (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å)`);
    console.log('');
    console.log('   üîß –ß–¢–û –ú–´ –û–ë–ù–û–í–ò–ú:');
    console.log(`      1. amount: ${ex.currentAmount} ‚Üí ${ex.correctAmount}`);
    console.log(`      2. payment_status: (–ø—É—Å—Ç–æ) ‚Üí "stopped"`);
    console.log('');
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
  });

  console.log('=== PAUSED DEALS (–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–ª–∞—Ç–µ–∂–∏, —Å—É–º–º–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è) ===\n');

  examples.wrongAmountPaused.forEach((ex, i) => {
    console.log(`${i + 1}. ${ex.dealname}`);
    console.log(`   HubSpot Link: https://app.hubspot.com/contacts/${portalId}/deal/${ex.hubspot_id}`);
    console.log('');
    console.log('   ‚ùå –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
    console.log(`      amount: $${ex.currentAmount}`);
    console.log(`      payment_status: (–ø—É—Å—Ç–æ)`);
    console.log('');
    console.log('   ‚úÖ –ß–¢–û –ù–£–ñ–ù–û:');
    console.log(`      amount: $${ex.correctAmount}`);
    console.log(`      payment_status: "paused"`);
    console.log('');
    console.log('   üîß –ß–¢–û –ú–´ –û–ë–ù–û–í–ò–ú:');
    console.log(`      1. amount: ${ex.currentAmount} ‚Üí ${ex.correctAmount}`);
    console.log(`      2. payment_status: (–ø—É—Å—Ç–æ) ‚Üí "paused"`);
    console.log('');
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
  });

  // 7. –†–µ–∑—é–º–µ
  console.log('\n\n=== –†–ï–ó–Æ–ú–ï ===\n');
  console.log('üîπ –ò–°–ü–û–õ–¨–ó–£–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ü–û–õ–Ø (–ù–ï –°–û–ó–î–ê–ï–ú –ù–û–í–´–ï!):');
  console.log('   1. amount - –û–ë–ù–û–í–ò–ú –∑–Ω–∞—á–µ–Ω–∏–µ');
  console.log('   2. payment_status - –ó–ê–ü–û–õ–ù–ò–ú (—Å–µ–π—á–∞—Å –ø—É—Å—Ç–æ)');
  console.log('   3. deal_whole_amount - –ß–ò–¢–ê–ï–ú (–∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—É–º–º—ã)');
  console.log('   4. installments - –ù–ï –¢–†–û–ì–ê–ï–ú (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
  console.log('');
  console.log('üîπ –ù–ï –°–û–ó–î–ê–ï–ú –ù–û–í–´–ï –ü–û–õ–Ø!');
  console.log('   –í—Å–µ –ø–æ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ HubSpot.');
  console.log('');
  console.log('üîπ –ß–¢–û –û–ë–ù–û–í–õ–Ø–ï–ú:');
  console.log('   - amount field ‚Üí –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—É–º–º–∞ –∏–∑ deal_whole_amount');
  console.log('   - payment_status ‚Üí finished/stopped/paused –∏–∑ CSV');
  console.log('');
  console.log('üîπ –ß–¢–û –ù–ï –¢–†–û–ì–ê–ï–ú:');
  console.log('   - dealstage (–æ—Å—Ç–∞–µ—Ç—Å—è closedwon)');
  console.log('   - installments (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
  console.log('   - hubspot_owner_id (–ø–æ–∫–∞ –Ω–µ —Ç—Ä–æ–≥–∞–µ–º)');
  console.log('   - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è');
  console.log('');
  console.log('üîπ PORTAL ID –¥–ª—è —Å—Å—ã–ª–æ–∫:');
  console.log(`   ${portalId}`);
  console.log('');
  console.log('üîπ –í–°–ï–ì–û DEALS –° –ü–†–û–ë–õ–ï–ú–ê–ú–ò:');
  console.log(`   Finished (wrong amount): ${examples.wrongAmount.length} –ø—Ä–∏–º–µ—Ä–æ–≤`);
  console.log(`   Stopped (wrong amount): ${examples.wrongAmountStopped.length} –ø—Ä–∏–º–µ—Ä–æ–≤`);
  console.log(`   Paused (wrong amount): ${examples.wrongAmountPaused.length} –ø—Ä–∏–º–µ—Ä–æ–≤`);
}

getProblemDealsWithLinks().catch(console.error);
