import dotenv from 'dotenv';
import fetch from 'node-fetch';

dotenv.config();

const API_KEY = process.env.HUBSPOT_API_KEY;
const BASE_URL = 'https://api.hubapi.com';

async function testConnection() {
    console.log('üîë –¢–æ–∫–µ–Ω:', API_KEY ? API_KEY.substring(0, 20) + '...' : '–ù–ï –ù–ê–ô–î–ï–ù');

    if (!API_KEY) {
        console.error('‚ùå HUBSPOT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
        return false;
    }

    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ HubSpot API...');

        const response = await fetch(`${BASE_URL}/crm/v3/objects/contacts?limit=1`, {
            headers: {
                'Authorization': `Bearer ${API_KEY}`,
                'Content-Type': 'application/json'
            }
        });

        console.log('üì° Response status:', response.status);
        console.log('üì° Response headers:', Object.fromEntries(response.headers.entries()));

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå –û—à–∏–±–∫–∞ API:', errorText);
            return false;
        }

        const data = await response.json();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìä –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã:', data.results?.length || 0);

        return true;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
        return false;
    }
}

testConnection();